{"paragraphs":[{"text":"%md\n# Tutorial 2: Introduction to Citi Bike New York and Setup\n\nThis tutorial was built for Big Data Cloud version 18.1 as part of the New Data Lake User Journey: <a href=\"https://github.com/oracle/learning-library/tree/master/workshops/journey2-new-data-lake\" target=\"_blank\">here</a>.  Questions and feedback about the tutorial: <david.bayard@oracle.com>\n\n## Contents\n+ About Citi Bike New York City\n+ Downloading data and storing in the Object Store\n+ Additional setup for the journey\n+ Next Steps\n\nAs a reminder, the documentation for BDC can be found <a href=\"https://docs.oracle.com/cloud/latest/big-data-compute-cloud/index.html\" target=\"_new\">here</a>","dateUpdated":"2018-03-07T01:32:42+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Tutorial 2: Introduction to Citi Bike New York and Setup</h1>\n<p>This tutorial was built for Big Data Cloud version 18.1 as part of the New Data Lake User Journey: <a href=\"https://github.com/oracle/learning-library/tree/master/workshops/journey2-new-data-lake\" target=\"_blank\">here</a>. Questions and feedback about the tutorial: <a href=\"mailto:&#100;&#97;&#118;&#x69;&#100;&#46;&#x62;&#97;&#x79;&#x61;&#x72;&#x64;&#64;&#x6f;&#114;&#97;c&#108;&#x65;&#x2e;c&#x6f;&#109;\">&#100;&#97;&#118;&#x69;&#100;&#46;&#x62;&#97;&#x79;&#x61;&#x72;&#x64;&#64;&#x6f;&#114;&#97;c&#108;&#x65;&#x2e;c&#x6f;&#109;</a></p>\n<h2>Contents</h2>\n<ul>\n  <li>About Citi Bike New York City</li>\n  <li>Downloading data and storing in the Object Store</li>\n  <li>Additional setup for the journey</li>\n  <li>Next Steps</li>\n</ul>\n<p>As a reminder, the documentation for BDC can be found <a href=\"https://docs.oracle.com/cloud/latest/big-data-compute-cloud/index.html\" target=\"_new\">here</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275266_61416873","id":"20170414-131903_889251720","dateCreated":"2018-03-06T19:41:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:502","user":"anonymous","dateFinished":"2018-03-07T01:32:42+0000","dateStarted":"2018-03-07T01:32:42+0000"},{"text":"%md\n# About Citi Bike New York City\n\nThis user journey uses bike ride data available from the New York City bike share program known as Citi Bike NYC.  Citi Bike consists of a fleet of bikes and a network of docking stations.  Bikes can be unlocked from one station and returned to any other.  Details about Citi Bike can be found here: <a href=\"https://www.citibikenyc.com/\" target=\"_blank\">https ://www.citibikenyc.com/</a>.\n\nWe will use Citi Bike bike trip data to illustrate some of the capabilities of BDCS-CE and its sister cloud services throughout this journey.\n\nParts of the journey are inspired by this analysis: <a href=\"http://toddwschneider.com/posts/a-tale-of-twenty-two-million-citi-bikes-analyzing-the-nyc-bike-share-system/\" target=\"_blank\">http ://toddwschneider.com/posts/a-tale-of-twenty-two-million-citi-bikes-analyzing-the-nyc-bike-share-system/</a>\n\n\n\n","dateUpdated":"2018-03-06T19:41:15+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>About Citi Bike New York City</h1>\n<p>This user journey uses bike ride data available from the New York City bike share program known as Citi Bike NYC. Citi Bike consists of a fleet of bikes and a network of docking stations. Bikes can be unlocked from one station and returned to any other. Details about Citi Bike can be found here: <a href=\"https://www.citibikenyc.com/\" target=\"_blank\">https ://www.citibikenyc.com/</a>.</p>\n<p>We will use Citi Bike bike trip data to illustrate some of the capabilities of BDCS-CE and its sister cloud services throughout this journey.</p>\n<p>Parts of the journey are inspired by this analysis: <a href=\"http://toddwschneider.com/posts/a-tale-of-twenty-two-million-citi-bikes-analyzing-the-nyc-bike-share-system/\" target=\"_blank\">http ://toddwschneider.com/posts/a-tale-of-twenty-two-million-citi-bikes-analyzing-the-nyc-bike-share-system/</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275266_61416873","id":"20170414-131917_125800834","dateCreated":"2018-03-06T19:41:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:503"},{"text":"%md\n# Downloading Citi Bike data and Storing in the Object Store\n\nThe first step will be to download a month of data.  We will get our data from <a href=\"https://www.citibikenyc.com/system-data\" target=\"_blank\">https: //www.citibikenyc.com/system-data</a>.  We will grab data for December 2016.\n\nOnce the data is downloaded, we will unzip it.  Finally, we will store the unzipped data into a container in Object Store.  The container does not need to exist-- the code will create it if needed.  By default, the container will be named \"journeyC\".  We will put our data into a \"citibike\" directory within the \"journeyC\" container.\n\nHere is a logical diagram of the architecture we will use in these tutorials:\n![Architecture](https://raw.githubusercontent.com/oracle/learning-library/master/workshops/journey2-new-data-lake/images/snap0012028.jpg)\n\nIn this step, we are illustrating how to move files into the Object Storage.  We will store the original data file into a directory within our container called \"citibike/raw\".  We will create a modified version of the data file (that has the header row removed) and store that into a directory called \"citibike/modified\".\n","dateUpdated":"2018-03-06T19:41:15+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Downloading Citi Bike data and Storing in the Object Store</h1>\n<p>The first step will be to download a month of data. We will get our data from <a href=\"https://www.citibikenyc.com/system-data\" target=\"_blank\">https: //www.citibikenyc.com/system-data</a>. We will grab data for December 2016.</p>\n<p>Once the data is downloaded, we will unzip it. Finally, we will store the unzipped data into a container in Object Store. The container does not need to exist&ndash; the code will create it if needed. By default, the container will be named &ldquo;journeyC&rdquo;. We will put our data into a &ldquo;citibike&rdquo; directory within the &ldquo;journeyC&rdquo; container.</p>\n<p>Here is a logical diagram of the architecture we will use in these tutorials:<br/><img src=\"https://raw.githubusercontent.com/oracle/learning-library/master/workshops/journey2-new-data-lake/images/snap0012028.jpg\" alt=\"Architecture\" /></p>\n<p>In this step, we are illustrating how to move files into the Object Storage. We will store the original data file into a directory within our container called &ldquo;citibike/raw&rdquo;. We will create a modified version of the data file (that has the header row removed) and store that into a directory called &ldquo;citibike/modified&rdquo;.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275267_61032124","id":"20170417-082204_1964276013","dateCreated":"2018-03-06T19:41:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:504"},{"title":"Shell commands to download data and copy data to Object Storage (takes 1-3 minutes)","text":"%sh\n\n# the very first time you run a shell interpreter with zeppelin 0.70, the first few characters of output seem to get jumbled.\n# since this paragraph is typically the first thing run, here is a silly workaround\necho \"                                       \"\nsleep 5\necho \"                                       \"\n# end silly workaround\n\nexport HADOOP_ROOT_LOGGER=WARN\n\nCONTAINER=journeyC\nDIRECTORY=citibike\nFILENAME=201612-citibike-tripdata\n\necho \"Object Storage Container Name        :\" $CONTAINER\necho \"Directory Name        :\" $DIRECTORY\necho \"Data Set name (remove .zip or .csv)  :\" $FILENAME\necho \"-----------------------------------------------------------------\"\n\ntest -e $DIRECTORY || mkdir $DIRECTORY\ncd $DIRECTORY\nrm $FILENAME*\n\necho \"Downloading $FILENAME.zip.  This may take a few minutes.\"\n# https://www.citibikenyc.com/system-data links us to https://s3.amazonaws.com/tripdata/\nwget -nv https://s3.amazonaws.com/tripdata/$FILENAME.zip \necho \"Extracting the csv from the zip file\"\nunzip $FILENAME.zip\n#head -3 $FILENAME.csv\necho \"Creating a new version of the file without header information named _nh.csv\"\nsed '1d' $FILENAME.csv > $FILENAME.nh.csv\nls -l\n\necho \"Storing both versions of the csv files to Object Storage.  This may take a few minutes.\"\n# we use the hadoop swift:// or oci:// driver to interact with the Object Store.\n\necho \"List the directory. directory should be empty or missing\"\nhadoop fs -ls swift://$CONTAINER.default/$DIRECTORY \necho \"Make the raw directory in Object Store\"\nhadoop fs -mkdir -p swift://$CONTAINER.default/$DIRECTORY/raw \necho \"Copy First File to Object Store. May take a minute\"\nhadoop fs -put $FILENAME.csv swift://$CONTAINER.default/$DIRECTORY/raw/$FILENAME.csv \necho \"Make the modified directory in Object Store\"\nhadoop fs -mkdir -p swift://$CONTAINER.default/$DIRECTORY/modified \necho \"Copy Second File to Object Store.  May take a minute\"\nhadoop fs -put $FILENAME.nh.csv swift://$CONTAINER.default/$DIRECTORY/modified/$FILENAME.nh.csv \necho \"Validate by listing the 2 csv files that got copied to Object Store (you should see 2 .csv files)\"\nhadoop fs -ls swift://$CONTAINER.default/$DIRECTORY/raw \nhadoop fs -ls swift://$CONTAINER.default/$DIRECTORY/modified\necho \"done\"\n","user":"anonymous","dateUpdated":"2018-03-07T01:32:51+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"false","language":"sh"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":424,"optionOpen":false}}},"graph":{"mode":"table","height":424,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{"container":"dcb-bdcs-apr12","CONTAINER":"citibike","FILENAME":"201612-citibike-tripdata","datafile":"","FILENAME%%.*":""},"forms":{}},"apps":[],"jobName":"paragraph_1520365275267_61032124","id":"20170417-082204_2139066596","dateCreated":"2018-03-06T19:41:15+0000","dateStarted":"2018-03-07T01:31:57+0000","dateFinished":"2018-03-07T01:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:505","errorMessage":""},{"text":"%md\n# Additional setup for BDCS-CE for the Journey\n\nThe next paragraph contains some commands to help setup the BDCS-CE environment with some additional tools that will be used later.  In particular, it will install the \"swift\" command-line for interacting with the Object Store.  The \"swift\" command line is written in Python, so we'll first do some work on updating various Python components.\n\nRun the following paragraph to make the needed changes.\n","dateUpdated":"2018-03-06T19:41:15+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Additional setup for BDCS-CE for the Journey</h1>\n<p>The next paragraph contains some commands to help setup the BDCS-CE environment with some additional tools that will be used later. In particular, it will install the &ldquo;swift&rdquo; command-line for interacting with the Object Store. The &ldquo;swift&rdquo; command line is written in Python, so we&rsquo;ll first do some work on updating various Python components.</p>\n<p>Run the following paragraph to make the needed changes.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275267_61032124","id":"20170811-131611_2093429735","dateCreated":"2018-03-06T19:41:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:506"},{"title":"Additional setup for BDCS-CE for the Journey","text":"%sh\necho \"Please run this paragraph to do some additional setup for our journey\"\n\nsudo whoami\n#the sudo whoami output should say root.  If not, your bootstrap.sh script did not work.  The easiest fix is to start over and recreate your instance as per the New Data Lake journey instructions.\n#Or you can follow the Reference document on manually running bootstrap.\n\n# If you get a SIGTERM error before this finishes, it is another sign your bootstrap.sh script did not work.\n\necho \"may take a few minutes.\"\n\ncase \"swift://journeyC.default\" in\n    *oci*) \n      echo \"running easy_install\"\n      sudo easy_install --upgrade --index-url https://pypi.python.org/simple/ pip \n      echo \"after easy_install\"\n    ;;\n    *)\n    echo \"No need to run easy_install with OCIC builds\"\n    ;;\t\nesac\n\necho \"use pip to upgrade setuptools\"\nsudo pip install --upgrade setuptools \necho \"after upgrade setuptools\"\necho \"use pip to install python-swiftclient\"\nsudo pip install python-swiftclient==2.7.0 \necho \"after swiftclient\"\necho \"testing swiftclient\"\necho \"..\"\necho \"..\"\nswift --help\n\necho \"..\"\necho \"..\"\necho \"done\"\n","dateUpdated":"2018-03-07T01:45:13+0000","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":"false"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":521.15,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520365275268_59108380","id":"20170811-130928_2030545857","dateCreated":"2018-03-06T19:41:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:507","user":"anonymous","dateFinished":"2018-03-07T01:45:08+0000","dateStarted":"2018-03-07T01:45:05+0000"},{"text":"%md\n# Next Steps\n\nSo far, we have downloaded a Citi Bike data zip and created csv files. Then we stored the data into an Object Storage container. \n\nIn the next part of the journey, we will set up a Hive table using the data.\n\n\n","dateUpdated":"2018-03-06T19:41:15+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Next Steps</h1>\n<p>So far, we have downloaded a Citi Bike data zip and created csv files. Then we stored the data into an Object Storage container. </p>\n<p>In the next part of the journey, we will set up a Hive table using the data.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275268_59108380","id":"20170417-103925_248941849","dateCreated":"2018-03-06T19:41:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:508"},{"text":"%md\n### Change Log\nMarch 6, 2018 - Tested with OCI and 18.1.4\nNovember 15, 2017 - Tweaked easy_install to use https address for index-url\nOctober 6, 2017 - Added small workaround for Zeppelin shell output jumbling during first execution\nSeptember 7, 2017 - Confirmed it works with 17.3.5-20\nAugust 23, 2017 - A few minor tweaks\nAugust 12, 2017 - Confirmed it works with 17.3.3-20\nAugust 11, 2017 - Journey version2 changes.\nJuly 31, 2017 - Added comments about 17.3.1-20 core-site.xml swift auth url issue that affects some users.\nJuly 28, 2017 - Confirmed that it works with 17.3.1-20.\n","user":"anonymous","dateUpdated":"2018-03-07T01:17:23+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Change Log</h3>\n<p>March 6, 2018 - Tested with OCI and 18.1.4<br/>November 15, 2017 - Tweaked easy_install to use https address for index-url<br/>October 6, 2017 - Added small workaround for Zeppelin shell output jumbling during first execution<br/>September 7, 2017 - Confirmed it works with 17.3.5-20<br/>August 23, 2017 - A few minor tweaks<br/>August 12, 2017 - Confirmed it works with 17.3.3-20<br/>August 11, 2017 - Journey version2 changes.<br/>July 31, 2017 - Added comments about 17.3.1-20 core-site.xml swift auth url issue that affects some users.<br/>July 28, 2017 - Confirmed that it works with 17.3.1-20.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1520365275268_59108380","id":"20170503-195744_526374432","dateCreated":"2018-03-06T19:41:15+0000","dateStarted":"2018-03-07T01:17:23+0000","dateFinished":"2018-03-07T01:17:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:509"},{"text":"%md\n","dateUpdated":"2018-03-06T19:41:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","results":{},"enabled":true,"editorSetting":{"language":"markdown","editOnDblClick":"true"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520365275269_58723631","id":"20170728-130001_1327783603","dateCreated":"2018-03-06T19:41:15+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:510"}],"name":"Journeys/New Data Lake/Tutorial 2 Citi Bike New York Introduction and Setup","id":"2D9AAZQ7E","angularObjects":{"2D9PWB7FU:shared_process":[],"2DAGTK881:shared_process":[],"2D9UGKJ9F:shared_process":[],"2DAURHBVK:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2DA57YKUM:shared_process":[],"2DAMRQE9G:shared_process":[],"2D9GNGXVV:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}