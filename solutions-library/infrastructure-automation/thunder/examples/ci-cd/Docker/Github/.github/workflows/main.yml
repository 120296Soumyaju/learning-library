name: docker.cicd
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name : prepare packages
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults
        echo "::add-path::/home/runner/bin"
        exec -l $SHELL
        sudo curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/latest.txt)/bin/linux/amd64/kubectl
        sudo chmod +x /usr/bin/kubectl
        kubectl version --client

    - name: Write Config & Key Files & Fix Permissions
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.USER_OCID}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.FINGERPRINT}}" >> ~/.oci/config
        echo "region=${{secrets.REGION}}" >> ~/.oci/config
        echo "tenancy=${{secrets.TENANCY_OCID}}" >> ~/.oci/config
        echo "key_file=~/.oci/oci_api_key.pem" >> ~/.oci/config
        echo "${{secrets.API_KEY}}" >> ~/.oci/oci_api_key.pem
        oci setup repair-file-permissions --file ~/.oci/config
        oci setup repair-file-permissions --file ~/.oci/oci_api_key.pem
    
    - name: docker login
      run: |
        docker login -u "${{secrets.OKE_REGISTRY_USER}}" -p "${{secrets.OKE_REGISTRY_PASSWORD}}" ${{secrets.OKE_REGISTRY}}
      
    - name: docker build
      run: |
        docker build -t "${{secrets.OKE_REGISTRY_IMAGE}}" .
        docker tag "${{secrets.OKE_REGISTRY_IMAGE}}" "${{secrets.OKE_REGISTRY_NEW_IMAGE}}"
        docker push "${{secrets.OKE_REGISTRY_NEW_IMAGE}}"
    
    - name: prepare kubernetes
      run: |
        mkdir -p $HOME/.kube
        export KUBECONFIG=$HOME/.kube/config
        oci ce cluster create-kubeconfig --cluster-id "${{secrets.CLUSTER_ID}}" --file $HOME/.kube/config --region "${{secrets.CLUSTER_REGION}}" --token-version 2.0.0
        secret=$(kubectl get secret | grep -w regcred | awk '{ print $1 }' || echo fail)
        if [ "$secret" == "regcred" ]; 
        then 
          kubectl delete secret regcred;
          kubectl create secret docker-registry regcred --docker-server="${{secrets.OKE_REGISTRY}}" --docker-username="${{secrets.OKE_REGISTRY_USER}}" --docker-password="${{secrets.OKE_REGISTRY_PASSWORD}}";
        else 
          kubectl create secret docker-registry regcred --docker-server="${{secrets.OKE_REGISTRY}}" --docker-username="${{secrets.OKE_REGISTRY_USER}}" --docker-password="${{secrets.OKE_REGISTRY_PASSWORD}}"; 
        fi
    
    - name: deploy pod
      run: |
        pod=$(kubectl get pod | grep -w dockerpod | awk '{ print $1 }' || echo fail)
        if [ "$pod" == "dockerpod" ]; 
        then 
          kubectl delete pod dockerpod;
          kubectl create -f kube.yml;
        else 
          kubectl create -f kube.yml; 
        fi